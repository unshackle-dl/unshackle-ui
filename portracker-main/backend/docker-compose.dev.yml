services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    working_dir: /app
    volumes:
      # Mount your source code (read-write for live updates)
      # Exclude node_modules from this mount, as it's handled by the named volume
      - .:/app:rw
      # Use a named volume for node_modules to persist them and keep them isolated
      - backend_node_modules:/app/node_modules
      # Optional: if your local collector needs access to the host's Docker socket
      - /var/run/docker.sock:/var/run/docker.sock
    # The CMD in Dockerfile.dev will be used (npm run dev)
    # If you need to override, you can use 'command:' here
    ports:
      - "3000:3000" # Exposed on ALL host IPs
    environment:
      - NODE_ENV=development
      - DATABASE_PATH=/app/data/ports-tracker.db # Ensure this path is used by db.js
      - RUNNING_IN_DOCKER=true # Explicitly set here, will override Dockerfile ENV if different
    # For Linux hosts if host.docker.internal is not available by default:
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

# Define the named volume
volumes:
  backend_node_modules:
  # Optional: if you want to persist database data separately
  # backend_data:
